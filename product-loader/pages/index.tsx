import ProductView from "@/components/productView"
import { useActions } from "@/hooks/useActions"
import { useTypedSelector } from "@/hooks/useTypeSelector"
import ProductLayout from "@/layouts/productLayout"
import { productApi } from "@/store/product/product.api"
import IProduct from "@/types/product.type"
import { GetServerSideProps, InferGetServerSidePropsType } from "next"
import { Head } from "next/document"
import { FC, useEffect } from "react"


const Catalog: FC<{ data: IProduct[] }> = ({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) => {

  const { products } = useTypedSelector(store => store)

  // let ProductsPros: IProduct[] = products ? [...products, ...ProductsApi] : ProductsApi

  let ProductsPros: IProduct[] = [...products, ...data]

  // const initProductsProps = async (): Promise<IProduct[]> => {

  //   let response = await fetch("https://dummyjson.com/products?limit=10")

  //   let json = await response.json()
  //   return [...products, ...json.products]
  // }

  // function getData() {
  //   let ProductsApi: IProduct[] = []
  //   fetch("https://dummyjson.com/products?limit=10")
  //     .then(res => res.json())
  //     .then(json => {
  //       console.log(json)
  //       ProductsPros = [...json.products]
  //     })
  // }

  // getData()



  // ProductsPros = initProductsProps()

  // useEffect(() => {
  //   initProductsProps()
  // }, [])

  const loadProducts = async (page: number) => {

    let response = await fetch(`https://dummyjson.com/products?skip=${page * 10}&limit=10`)

    if (response.ok) {

      let json = await response.json()
      ProductsPros = [...ProductsPros, ...json.products]
    } else {
      alert("Ошибка HTTP: " + response.status)
    }
  }

  return (
    <>
      {/* <Head>
                <title>Каталог</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
                <link
                    rel="stylesheet"
                    href="https://fonts.googleapis.com/icon?family=Material+Icons"
                />
            </Head> */}
      <ProductLayout title="Каталог">
        <ProductView products={ProductsPros} loadFunc={loadProducts} />
      </ProductLayout>
    </>

  )
}

export default Catalog

export const getServerSideProps: GetServerSideProps<{ data: IProduct[] }> = async () => {
  let ProductsApi: IProduct[] = []
  await fetch("https://dummyjson.com/products?limit=30")
    .then(res => res.json())
    .then(json => {
      console.log(json)
      ProductsApi = [...json.products]
    })

  // const res = await fetch('https://dummyjson.com/products?limit=10')
  // const data = await res.json()
  // ProductsApi = data.products

  return {
    props: { data: ProductsApi }
  }
}